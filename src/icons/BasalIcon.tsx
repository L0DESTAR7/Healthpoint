import { styled } from "nativewind";
import { Path, Svg } from "react-native-svg";
import getFormFactor from "../util/getFormFactor";
import { IconProps } from "../types/IconProps";
import { View } from "react-native";

const StyledPath = styled(Path, { classProps: ["fill", "stroke"] })

function BasalSVG({ fill, ...props }: any) {

  const formFactor = getFormFactor();
  console.log("[BasalSVG.tsx]: formFactor = " + formFactor);

  return (
    <Svg
      viewBox="0 0 12 12"
      width={formFactor === "lg" ? 20 : (formFactor === "md" ? 14 : 12)}
      height={formFactor === "lg" ? 20 : (formFactor === "md" ? 14 : 12)}>
      <StyledPath fill={fill} fillRule="evenodd" clipRule="evenodd" d="M6 12C9.31371 12 12 9.31371 12 6C12 2.68629 9.31371 0 6 0C2.68629 0 0 2.68629 0 6C0 9.31371 2.68629 12 6 12ZM9.50734 4.43482C9.5749 4.36151 9.64053 4.2903 9.56898 4.04679L9.57024 4.04547C9.50777 3.8631 9.38058 3.71253 9.21478 3.62469L9.36839 2.8122V2.80692C9.40247 2.78987 9.43138 2.76338 9.45193 2.73035C9.47248 2.69731 9.48389 2.65903 9.48489 2.61969C9.48589 2.58035 9.47645 2.54149 9.45761 2.50737C9.43876 2.47326 9.41124 2.4452 9.37808 2.4263C9.34491 2.4074 9.30738 2.39838 9.26961 2.40024C9.23184 2.40209 9.19528 2.41475 9.16397 2.43681C9.13266 2.45888 9.10781 2.4895 9.09213 2.52531C9.07646 2.56112 9.07057 2.60073 9.07513 2.6398C9.08117 2.69484 9.10786 2.74517 9.14939 2.77984L9.00594 3.53882C8.88289 3.50416 8.7532 3.50416 8.63016 3.53882L8.34324 2.87826C8.37119 2.83523 8.38335 2.78319 8.37752 2.73161C8.37327 2.69195 8.35845 2.65431 8.33473 2.62295C8.31102 2.59159 8.27934 2.56776 8.24329 2.55414C8.20724 2.54052 8.16825 2.53766 8.13073 2.54589C8.0932 2.55412 8.05863 2.5731 8.03092 2.60069C8.00322 2.62828 7.98347 2.66339 7.97393 2.70204C7.96438 2.7407 7.96541 2.78136 7.9769 2.81943C7.98839 2.85751 8.00988 2.89148 8.03895 2.91752C8.06801 2.94356 8.10349 2.96062 8.14139 2.96677L8.43401 3.64517C8.29881 3.76275 8.20486 3.96488 8.19851 4.27534C8.19529 4.42149 8.20211 4.55299 8.20869 4.68003C8.22286 4.95322 8.23595 5.20579 8.14583 5.53899C8.13844 5.5663 8.13093 5.59421 8.12328 5.62265C7.95886 6.23407 7.72942 7.08728 7.18352 7.29873C6.80965 7.44405 6.27708 7.48038 5.54519 7.39847C5.43805 7.50929 5.31543 7.6026 5.18147 7.67525C4.88694 7.831 4.55955 7.90731 4.22932 7.89719C3.90288 7.89288 3.5836 7.79703 3.3051 7.61976C3.20288 7.55197 3.10816 7.47266 3.02263 7.38328C2.74714 7.49359 2.51418 7.62637 2.39802 7.73998C2.28171 7.85237 2.09575 7.79636 1.91726 7.74261C1.87754 7.73064 1.8382 7.71879 1.80007 7.70894C1.77277 9.47659 9.75623 9.84122 9.46233 6.13284C9.4325 5.74443 9.35569 4.71263 9.4325 4.53825C9.45153 4.49537 9.4796 4.46492 9.50734 4.43482ZM7.38919 6.57674C7.03055 6.85351 6.45926 7.00214 5.86257 6.94797H5.8594C6.4053 4.74302 4.10808 4.37443 3.7012 5.72593C3.65912 5.87768 3.65388 6.03792 3.68596 6.19229C3.71516 6.41027 3.97351 6.37923 3.93987 6.21211C3.87258 5.03433 5.15164 5.08387 5.50584 5.90825C5.61565 6.16698 5.62576 6.45972 5.53409 6.72599C5.44242 6.99226 5.25597 7.21172 5.01326 7.33902C4.55559 7.58805 3.92336 7.58013 3.50124 7.29939C2.63923 6.72668 2.68303 5.24174 3.35715 4.55476C4.78665 3.09426 7.26223 4.14191 7.38919 6.57674ZM8.95756 3.98755C8.93073 3.96889 8.89919 3.95894 8.86692 3.95894C8.82366 3.95894 8.78216 3.97682 8.75157 4.00866C8.72098 4.04049 8.70379 4.08367 8.70379 4.1287C8.70379 4.16228 8.71336 4.1951 8.73128 4.22301C8.74921 4.25093 8.77469 4.27269 8.80449 4.28554C8.8343 4.29839 8.8671 4.30175 8.89875 4.2952C8.9304 4.28865 8.95946 4.27248 8.98228 4.24874C9.00509 4.225 9.02063 4.19475 9.02692 4.16182C9.03322 4.12889 9.02999 4.09475 9.01764 4.06373C9.00529 4.03271 8.98438 4.0062 8.95756 3.98755Z" />
    </Svg>
  )
}


export default function BasalIcon(props: IconProps) {

  return (
    <View className={props.class}>
      <BasalSVG fill={
        !props.overrideDefaultFill ?
          props.isActive ?
            "fill-spring-50"
            :
            "fill-spring-950"
          :
          `${props.overrideDefaultFill}`
      }>
      </BasalSVG>
    </View>
  )
}

